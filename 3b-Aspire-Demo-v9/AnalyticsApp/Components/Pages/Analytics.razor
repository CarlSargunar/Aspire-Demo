@page "/analytics"
@using AnalyticsApp.Client
@attribute [StreamRendering]
@inject AnalyticsApiClient apiClient
@inject ILogger<Analytics> logger

<PageTitle>Analytics</PageTitle>

<h1>Analytics</h1>

<p>These are the current page views on your site.</p>

@if (pageViews == null)
{
    <p><em>Loading Pageviews ...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>URL</th>
                <th>Last Accessed Date</th>
                <th>View Count</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pageView in pageViews)
            {
                <tr>
                    <td>@pageView.Url</td>
                    <td>@pageView.LastAccessed.ToString("g")</td>
                    <td>@pageView.Count</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (string.IsNullOrEmpty(errorMessage) == false)
{
    <p><strong>Error:</strong> @errorMessage</p>
}


@code {
    private PageView[]? pageViews;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            pageViews = await apiClient.GetPageViews();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            logger.LogError(ex, "Failed to load page views");
        }
    }
}
